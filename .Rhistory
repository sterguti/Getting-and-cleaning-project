getwd()
getwd()
library(dplyr)
filename <- "getdata_dataset.zip"
## Download and unzip the dataset:
if (!file.exists(filename)){
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileURL, filename, method="curl")
}
if (!file.exists("UCI HAR Dataset")) {
unzip(filename)
}
x_train <- read.table("train/X_train.txt")
y_train <- read.table("train/y_train.txt")
subject_train <- read.table("train/subject_train.txt")
dir <- "UCI HAR Dataset"
x_train <- read.table("dir/train/X_train.txt")
dir <- "./UCI HAR Dataset"
x_train <- read.table("dir/train/X_train.txt")
x_train <- read.table(paste(dir,"/train/X_train.txt"))
x_train <- read.table(paste(dir,"/train/X_train.txt", sep=""))
View(x_train)
y_train <- read.table(paste(dir,"train/y_train.txt",sep=""))
subject_train <- read.table(paste(dir,"train/subject_train.txt",sep=""))
y_train <- read.table(paste(dir,"train/y_train.txt",sep=""))
y_train <- read.table(paste(dir,"train/y_train.txt",sep=""))
subject_train <- read.table(paste(dir,"train/subject_train.txt",sep=""))
y_train <- read.table(paste(dir,"train/y_train.txt",sep=""))
getwd()
paste(dir,"train/y_train.txt",sep="")
dir
dir <- "./UCI HAR Dataset/"
paste(dir,"train/X_train.txt", sep="")
paste(dir,"train/y_train.txt",sep="")
y_train <- read.table(paste(dir,"train/y_train.txt",sep=""))
subject_train <- read.table(paste(dir,"train/subject_train.txt",sep=""))
View(y_train)
View(x_train)
x_test <- read.table(paste(dir, "test/X_test.txt",sep=""))
y_test <- read.table(paste(dir, "test/y_test.txt", sep=""))
subject_test <- read.table(paste(dir, "test/subject_test.txt",sep=""))
# create 'x' data set
x_data <- rbind(x_train, x_test)
# create 'y' data set
y_data <- rbind(y_train, y_test)
7352+2947
subject_data <- rbind(subject_train, subject_test)
mean(x_data)
summary(x_data)
tapply(x_data,mean)
apply(x_data,mean)
lapply(x_data,mean)
str(x_data)
View(x_train)
View(subject_train)
features <- read.table(paste(dir, "features.txt", sep=""))
View(features)
mean_and_std_features <- grep("-(mean|std)\\(\\)", features[, 2])
mean_and_std_features <- grep("-(mean|std)", features[, 2])
mean_and_std_features <- grep("-(mean|std)\\(\\)", features[, 2])
mean_and_std_features <- grep("-(mean|std)", features[, 2])
mean_and_std_features <- grep("-(mean|std)", features[, 2])
grep(".*mean.*|.*std.*", features[,2])
mean_and_std_features <- grep(".*mean.*|.*std.*", features[,2])
mean_and_std_features <- grep("-(mean|std)\\(\\)", features[, 2])
mean_and_std_features <- grep("-(mean|std)\\(\\)", features[, 2])
mean_and_std_features <- grep("-(mean|std)", features[, 2])
mean_and_std_features <- grep("-(mean|std).*", features[, 2])
mean_and_std_features <- grep(".*mean.*|.*std.*", features[,2])
# subset the desired columns
x_data <- x_data[, mean_and_std_features]
# correct the column names
names(x_data) <- features[mean_and_std_features, 2]
View(x_data)
View(y_data)
View(x_data)
View(x_data)
View(y_train)
labels <- read.table(paste(dir, "activity_labels.txt", sep=""))
View(labels)
labels[y_data[, 1], 2]
y_data[, 1]
View(y_data)
View(labels)
?merge
merge(y_data, labels,intersect(names(y_data), names(labels)))
merge(y_data, labels,by.x="V1", by.y="V1")
labels[y_data[, 1], 2]
merge(y_data, labels,by.x="V1", by.y="V2")
merge(y_data, labels,by.x="V1", by.y="V1")
merge(y_data, labels,intersect(names(y_data),names(labels)))
unite
?unite
??unite
??unite.dplyr
unite(y_data, labels)
install.packages("tydr")
install.packages("tidyr")
merge(y_data, labels)
merge(y_data, labels, all.x = TRUE)
merge(y_data, labels, all.y = TRUE)
merge(y_data, labels, all.x = TRUE)
merge(y_data, labels, all.y = TRUE)
merge(y_data, labels,by.x="V1", by.y="V1")
merge(y_data, labels,intersect(names(y_data),names(labels)))
merge(y_data, labels,by.x="V1", by.y="V1")
labels[y_data[, 1], 2]
merge(y_data, labels,by.x="V1", by.y="V1")
merge(y_data, labels,by="V1")
labels[y_data[, 1], 2]
y_data <- labels[y_data[, 1], 2]
y_data <- rbind(y_train, y_test)
View(y_data)
View(y_data)
y_data[, 1]
y_data <- labels[y_data[, 1], 2]
names(y_data) <- "activity"
names(y_data) <- "activity"
y_data <- rbind(y_train, y_test)
y_data[, 1]
labels[y_data[, 1], 2]
y_data <- as.factor(labels[y_data[, 1], 2])
ames(y_data) <- "activity"
names(y_data) <- "activit
""
"
"names(y_data) <- "activity"
names(y_data) <- "activity"
y_data <- rbind(y_train, y_test)
merge(y_data,labels,by='V1',all.x=TRUE)
y_data <- merge(y_data,labels,by='V1',all.x=TRUE)
View(y_data)
View(y_data)
names(y_data) <- "activities"
View(y_data)
names(y_data[,2]) <- "activities"
View(y_data)
y_data <- rbind(y_train, y_test)
View(x_data)
View(y_test)
y_data <- merge(y_data,labels,by='V1',all.x=TRUE)
View(y_data)
y_data[,2]
y_data[1,2]
y_data[2,2]
labels[y_data[, 1], 2]
y_data[, 1] <- labels[y_data[, 1], 2]
names(y_data) <- "activity"
y_data <- rbind(y_train, y_test)
y_data[, 1]
y_data[, 1] <- labels[y_data[, 1], 2]
# correct column name
names(y_data) <- "activity"
y_data_p <- rbind(y_train, y_test)
prueba <- merge(y_data_p, labels)
View(prueba)
prueba <- merge(y_data_p, labels, by= "V1")
View(prueba)
?join
prueba <- semi.join(y_data_p, labels)
semi_join(y_data_p, labels)
prueba <- semi_join(y_data_p, labels)
View(prueba)
View(y_data_p)
View(labels)
prueba <- semi_join(y_data_p, labels, by.y="V2")
prueba <- semi_join(y_data_p, labels, by="V2")
View(subject_data)
names(subject_data) <- "Subject"
View(y_data)
all_data <- cbind(x_data, y_data, subject_data)
View(all_data)
write.table(tidyData, './av_data.txt',row.names=TRUE,sep='\t');
all_data$Subject
?ddply
??ddply
new_data <- ddply(all_data, .(activity), .(Subject))
library(dplyr)
ddply(all_data, .(activity), .(Subject))
names(subject_data) <- "Subject"
new_data <- all_data[, lapply(.SD, mean), by= "Subject,activity"]
new_data <- all_data[, lapply(all_data, mean), by= "Subject,activity"]
new_data <- all_data[, lapply(.SD, mean, by= "Subject,activity")]
dataAggr<- aggregate(. ~ Subject - activity, data = all_data, mean)
View(dataAggr)
dataTable<- tbl_df(arrange(dataAggr,subject,activity))
dataTable<- tbl_df(arrange(dataAggr,Subject,activity))
View(dataTable)
all_data<- tbl_df(arrange(dataAggr,Subject,activity))
# Export the tidyData set
write.table(all_data, './av_data.txt',row.names=TRUE,sep='\t')
?aggregate
?arrange
?aggregate
new_data<- aggregate(. ~ Subject - activity, data = all_data, mean)
a_data<- tbl_df(arrange(dataAggr,Subject,activity))
# Export the tidyData set
write.table(a_data, './av_data.txt',row.names=TRUE,sep='\t')
View(a_data)
